Terminals unused in grammar

   T_Void
   T_Bool
   T_Vec2
   T_Vec3
   T_Vec4
   T_Mat2
   T_Mat3
   T_Mat4
   T_In
   T_Out
   T_Uniform
   T_Layout
   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_Dims
   T_And
   T_Or
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_Continue
   T_Inc
   T_Dec
   T_Switch
   T_Case
   T_Default
   T_FieldSelection
   T_IncOp
   T_DecOp
   T_LeOp
   T_GeOp
   T_EqOp
   T_NeOp
   T_AndOp
   T_OrOp
   T_MulAssign
   T_DivAssign
   T_AddAssign
   T_SubAssign
   T_LeftParen
   T_RightParen
   T_LeftBrace
   T_RightBrace
   T_Dot
   T_Dash
   T_Plus
   T_Star
   T_Slash
   T_LeftAngle
   T_RightAngle
   T_IntConstant
   T_FloatConstant
   T_BoolConstant


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VarDecl
    5     | T_Identifier ';'

    6 VarDecl: Type T_Identifier ';'

    7 Type: T_Int
    8     | T_Float


Terminals, with rules where they appear

$end (0) 0
';' (59) 5 6
error (256)
T_Void (258)
T_Bool (259)
T_Int (260) 7
T_Float (261) 8
T_Vec2 (262)
T_Vec3 (263)
T_Vec4 (264)
T_Mat2 (265)
T_Mat3 (266)
T_Mat4 (267)
T_In (268)
T_Out (269)
T_Uniform (270)
T_Layout (271)
T_LessEqual (272)
T_GreaterEqual (273)
T_Equal (274)
T_NotEqual (275)
T_Dims (276)
T_And (277)
T_Or (278)
T_While (279)
T_For (280)
T_If (281)
T_Else (282)
T_Return (283)
T_Break (284)
T_Continue (285)
T_Inc (286)
T_Dec (287)
T_Switch (288)
T_Case (289)
T_Default (290)
T_FieldSelection (291)
T_IncOp (292)
T_DecOp (293)
T_LeOp (294)
T_GeOp (295)
T_EqOp (296)
T_NeOp (297)
T_AndOp (298)
T_OrOp (299)
T_MulAssign (300)
T_DivAssign (301)
T_AddAssign (302)
T_SubAssign (303)
T_LeftParen (304)
T_RightParen (305)
T_LeftBrace (306)
T_RightBrace (307)
T_Dot (308)
T_Dash (309)
T_Plus (310)
T_Star (311)
T_Slash (312)
T_LeftAngle (313)
T_RightAngle (314)
T_Identifier (315) 5 6
T_IntConstant (316)
T_FloatConstant (317)
T_BoolConstant (318)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
Program (66)
    on left: 1, on right: 0
DeclList (67)
    on left: 2 3, on right: 1 2
Decl (68)
    on left: 4 5, on right: 2 3
VarDecl (69)
    on left: 6, on right: 4
Type (70)
    on left: 7 8, on right: 6


state 0

    0 $accept: . Program $end

    T_Int         shift, and go to state 1
    T_Float       shift, and go to state 2
    T_Identifier  shift, and go to state 3

    Program   go to state 4
    DeclList  go to state 5
    Decl      go to state 6
    VarDecl   go to state 7
    Type      go to state 8


state 1

    7 Type: T_Int .

    $default  reduce using rule 7 (Type)


state 2

    8 Type: T_Float .

    $default  reduce using rule 8 (Type)


state 3

    5 Decl: T_Identifier . ';'

    ';'  shift, and go to state 9


state 4

    0 $accept: Program . $end

    $end  shift, and go to state 10


state 5

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Int         shift, and go to state 1
    T_Float       shift, and go to state 2
    T_Identifier  shift, and go to state 3

    $default  reduce using rule 1 (Program)

    Decl     go to state 11
    VarDecl  go to state 7
    Type     go to state 8


state 6

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


state 7

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


state 8

    6 VarDecl: Type . T_Identifier ';'

    T_Identifier  shift, and go to state 12


state 9

    5 Decl: T_Identifier ';' .

    $default  reduce using rule 5 (Decl)


state 10

    0 $accept: Program $end .

    $default  accept


state 11

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


state 12

    6 VarDecl: Type T_Identifier . ';'

    ';'  shift, and go to state 13


state 13

    6 VarDecl: Type T_Identifier ';' .

    $default  reduce using rule 6 (VarDecl)
